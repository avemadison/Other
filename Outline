Листинг 1.7. Поиск подстроки с использованием функции strpos( )
if (strpos($_POST['email'], '@') === false) {
print 'There was no @ in the e-mail address!';
}


Листинг 1.8. Выделение подстроки с использованием функции substr()
$substring = substr($string,$start,$length);
$username = substr($_GET['username'],0,8);


Листинг 1.14. Замена подстроки с использованием функции substr_replace()
// Все символы от позиции $start до конца $old_string заменяются содержимым $new_substring
$new_string = substr_replace($old_string,$new_substring,$start);
// $length символов, начиная с позиции $start, заменяются содержимым $new_substring
$new_string = substr_replace($old_string,$new_substring,$start,$length);

Example: $credit_card = '4111 1254 7843 9746';
echo substr_replace($credit_card,'xxxx xxxx xxxx ',0,strlen($credit_card)-4);
//xxxx xxxx xxxx 9746//


Листинг 1.24. Преобразование регистра символов
print ucfirst("how do you do today?");
print ucwords("the prince of wales");
//Код листинга выводит следующий результат:
How do you do today?
The Prince Of Wales


Задача:
Требуется определить, содержит ли массив некоторое значение.
Решение:
/*Воспользуемся функцией in_array()*/
if (in_array($value, $array)) {
// В массиве $array имеется элемент со значением $value
}
Example:
$book_collection = array('Emma', 'Pride and Prejudice', 'Northhanger Abbey');
$book = 'Sense and Sensibility';
if (in_array($book, $book_collection)) {
echo 'Own it.';
} else {
echo 'Need it.';
}


Задача:
Требуется переставить элементы массива в обратном порядке.
Решение:
/*Воспользуемся функцией array_reverse()*/
$array = array('Zero', 'One', 'Two');
$reversed = array_reverse($array);


Задача:
Требуется исключить из массива дубликаты (повторяющиеся значения).
Решение:
//Если массив уже построен, воспользуемся функцией array_unique(), которая возвращает новый массив без дубликатов:
$unique = array_unique($array);
//Если массив строится одновременно с обработкой результатов, для числовых массивов решение может выглядеть так:
foreach ($_GET['fruits'] as $fruit) {
if (!in_array($fruit, $array)) { $array[] = $fruit; }
}
//Решение для ассоциативных массивов:
foreach ($_GET['fruits'] as $fruit) {
$array[$fruit] = $fruit;
}


Задача:
Имеется пара массивов. Требуется вычислить их объединение (все элементы), пересечение (элементы, входящие в оба массива) или разность (элементы, входящие в одно множество, но не в оба).
Решение
Вычисление объединения:
$union = array_unique(array_merge($a, $b));
Вычисление пересечения:
$intersection = array_intersect($a, $b);
Вычисление простой разности:
$difference = array_diff($a, $b);
Вычисление симметричной разности:
$difference = array_merge(array_diff($a, $b), array_diff($b, $a));


Задача:
Требуется поменять местами значения двух переменных без использования дополнительных переменных для промежуточного хранения данных.
$a = 'Alice';
$b = 'Bob';
list($a,$b) = array($b,$a);
// Теперь $a содержит 'Bob', а $b содержит 'Alice'


Чтоб исполнить скрипт с консоли:
В xampp кнопка shell. Переходим командой cd c:\xampp\htocs в папку со скриптом. Далее команда php 4.php.
Для того, чтобы исполнять PHP скрипты из командной строки необходимо включить т.н. интерактивную консоль, которая позволит исполнять код PHP, который был набран в ней. Для этого необходимо вызвать php с опцией -a.
Для того чтоб исполнить существующий скрипт (в отдельном файле), необходимо вызвать php и указать полный путь к файлу.
